%CODE
	CALL @start
	HALT
; < begin_function, factorial, _, _ >
@factorial:
	PUSH FP
	CPY  FP, SP
; < <=, n, 0, $t1 >
	LOD R0, *(FP+8)
	CMP R0, 0
; < goto_if_false, $t1, _, L2 >
	JG @L2
; < return, 1, _, _ >
	LOD R0, 1
; < goto, _, _, L1 >
	JMP @L1
; < label, L2, _, _ >
@L2:
; < label, L1, _, _ >
@L1:
; < -, n, 1, $t2 >
	LOD R1, *(FP+8)
	DEC R1
; < param, $t2, _, _ >
	PUSH R1
; < call, factorial, _, $t3 >
	CALL @factorial
; < *, n, $t3, $t4 >
	LOD R3, *(FP+8)
	MUL R3, R0
; < return, $t4, _, _ >
	CPY R0, R3
; < end_function, factorial, _, _ >
	CPY SP, FP
	POP FP
	RET	
;end of factorial
; < begin_function, start, _, _ >
@start:
	PUSH FP
	CPY  FP, SP
	;allocate space for local vars
	ADD  SP, -8
; < param, "Enter a number: ", _, _ >
	LOD R0, @$TEXT1
; < call, write_text, _, _ >
	CALL @write_text
; < call, read_int, _, $t1 >
	CALL @read_int
; < :=, $t1, _, x >
	STOR *(FP-4), R0
; < param, x, _, _ >
	LOD R3, *(FP-4)
	PUSH R3
; < call, factorial, _, $t1 >
	CALL @factorial
; < :=, $t1, _, f >
	STOR *(FP-8), R0
; < param, x, _, _ >
	LOD R0, *(FP-4)
; < call, write_int, _, _ >
	CALL @write_int
; < param, "! = ", _, _ >
	LOD R0, @$TEXT2
; < call, write_text, _, _ >
	CALL @write_text
; < param, f, _, _ >
	LOD R0, *(FP-8)
; < call, write_int, _, _ >
	CALL @write_int
; < call, write_nl, _, _ >
	CALL @write_nl
; < end_function, start, _, _ >
	CPY SP, FP
	POP FP
	RET	
;end of start
%INCLUDE stdlib

%DATA
	@$TEXT1: DB "Enter a number: ",0
	@$TEXT2: DB "! = ",0
