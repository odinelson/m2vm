
;
; M2 Assembler Test File
; Calculates the value of delta, in a 2nd degree equation
; This version uses a function to read floats
; @author Odilon
;	
	
		%CODE
		;read a
		LOD	R0, @PROMPT_A
		CALL @READF
		STOR *@A, F0
		
		;read b
		LOD	R0, @PROMPT_B
		CALL @READF
		STOR *@B, F0
		
		;read c
		LOD	R0, @PROMPT_C
		CALL @READF
		STOR *@C, F0
		
		LOD	F0, *@A
		LOD	F1, *@B
		LOD	F2, *@C
		
		MUL	F1, F1		;b*b
		;;LOD	F3, 4		;4*a	;BUG
		LOD	F3, *@FOUR
		;LOD	R0, 4
		;CPY	F3, R0
		
		MUL	F0, F3		;F0<-4*a
		MUL	F0, F2		;F0<-4*a*c
		SUB	F1, F0		;F1<-b*b-4*a*c
		
		;show result
		LOD	R0, @RES_STR
		LOD	IR, 6		;write_strz
		INT	1
		CPY	F0, F1
		LOD	IR, 4		;write_float
		INT	1
		
		HALT

; Expects: Addres of promp string in R0
; Returns: float in F0
@READF:
		LOD	IR, 6		;write_strz
		INT	1
		LOD	IR, 5		;read_float
		INT	1
		
		RET

		%DATA
@PROMPT_A:	DB "a? "
			DB	0
@PROMPT_B:	DB "b? "
			DB	0
@PROMPT_C:	DB "c? "
			DB	0
@RES_STR:	DB "delta = "
			DB	0
@FOUR:		DW	4.0

@A:			DW	0
@B:			DW	0
@C:			DW	0
