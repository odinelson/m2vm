/* Generated By:JJTree&JavaCC: Do not edit this line. M2AsmParserConstants.java */
package br.unipe.m2asm.parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface M2AsmParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 3;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 4;
  /** RegularExpression Id. */
  int HEX_LITERAL = 5;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 6;
  /** RegularExpression Id. */
  int CHAR_LITERAL = 7;
  /** RegularExpression Id. */
  int STR_LITERAL = 8;
  /** RegularExpression Id. */
  int NEWLINE = 9;
  /** RegularExpression Id. */
  int NOP = 10;
  /** RegularExpression Id. */
  int HALT = 11;
  /** RegularExpression Id. */
  int INC = 12;
  /** RegularExpression Id. */
  int DEC = 13;
  /** RegularExpression Id. */
  int ADD = 14;
  /** RegularExpression Id. */
  int SUB = 15;
  /** RegularExpression Id. */
  int MUL = 16;
  /** RegularExpression Id. */
  int DIV = 17;
  /** RegularExpression Id. */
  int NEG = 18;
  /** RegularExpression Id. */
  int AND = 19;
  /** RegularExpression Id. */
  int OR = 20;
  /** RegularExpression Id. */
  int XOR = 21;
  /** RegularExpression Id. */
  int NOT = 22;
  /** RegularExpression Id. */
  int SHL = 23;
  /** RegularExpression Id. */
  int SHR = 24;
  /** RegularExpression Id. */
  int CPY = 25;
  /** RegularExpression Id. */
  int CMP = 26;
  /** RegularExpression Id. */
  int LOD = 27;
  /** RegularExpression Id. */
  int STOR = 28;
  /** RegularExpression Id. */
  int JMP = 29;
  /** RegularExpression Id. */
  int JE = 30;
  /** RegularExpression Id. */
  int JNE = 31;
  /** RegularExpression Id. */
  int JL = 32;
  /** RegularExpression Id. */
  int JLE = 33;
  /** RegularExpression Id. */
  int JG = 34;
  /** RegularExpression Id. */
  int JGE = 35;
  /** RegularExpression Id. */
  int INT = 36;
  /** RegularExpression Id. */
  int CALL = 37;
  /** RegularExpression Id. */
  int RET = 38;
  /** RegularExpression Id. */
  int PUSH = 39;
  /** RegularExpression Id. */
  int POP = 40;
  /** RegularExpression Id. */
  int CODESEG = 41;
  /** RegularExpression Id. */
  int DATASEG = 42;
  /** RegularExpression Id. */
  int STACKSEG = 43;
  /** RegularExpression Id. */
  int INCLUDE = 44;
  /** RegularExpression Id. */
  int DEF = 45;
  /** RegularExpression Id. */
  int MACRO = 46;
  /** RegularExpression Id. */
  int ENDMACRO = 47;
  /** RegularExpression Id. */
  int DB = 48;
  /** RegularExpression Id. */
  int DW = 49;
  /** RegularExpression Id. */
  int RESB = 50;
  /** RegularExpression Id. */
  int RESW = 51;
  /** RegularExpression Id. */
  int BYTE = 52;
  /** RegularExpression Id. */
  int REG_INT = 53;
  /** RegularExpression Id. */
  int REG_FLOAT = 54;
  /** RegularExpression Id. */
  int IDENTIFIER = 55;
  /** RegularExpression Id. */
  int NAMED_REG = 56;
  /** RegularExpression Id. */
  int LETTER = 57;
  /** RegularExpression Id. */
  int DIGIT = 58;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<CHAR_LITERAL>",
    "<STR_LITERAL>",
    "<NEWLINE>",
    "<NOP>",
    "<HALT>",
    "<INC>",
    "<DEC>",
    "<ADD>",
    "<SUB>",
    "<MUL>",
    "<DIV>",
    "<NEG>",
    "<AND>",
    "<OR>",
    "<XOR>",
    "<NOT>",
    "<SHL>",
    "<SHR>",
    "<CPY>",
    "<CMP>",
    "<LOD>",
    "<STOR>",
    "<JMP>",
    "<JE>",
    "<JNE>",
    "<JL>",
    "<JLE>",
    "<JG>",
    "<JGE>",
    "<INT>",
    "<CALL>",
    "<RET>",
    "<PUSH>",
    "<POP>",
    "<CODESEG>",
    "<DATASEG>",
    "<STACKSEG>",
    "<INCLUDE>",
    "<DEF>",
    "<MACRO>",
    "<ENDMACRO>",
    "<DB>",
    "<DW>",
    "<RESB>",
    "<RESW>",
    "<BYTE>",
    "<REG_INT>",
    "<REG_FLOAT>",
    "<IDENTIFIER>",
    "<NAMED_REG>",
    "<LETTER>",
    "<DIGIT>",
    "\",\"",
    "\":\"",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
  };

}
